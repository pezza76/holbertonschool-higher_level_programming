
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

#Divides all elements of the matrix by div.
#Raises TypeError if matrix contains non int/float elements.

>>> matrix_divided([[4, 8], [2, 6]], 2)
[[2.0, 4.0], [1.0, 3.0]]

>>> matrix_divided([[4, 8], [2, 6]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]

>>> matrix_divided([[1, 2], ['3', 4]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, 4], [5,6,7]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2], [3, 4]], '2')
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix', 'div'